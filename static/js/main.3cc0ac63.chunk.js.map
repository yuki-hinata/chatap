{"version":3,"sources":["config/firebase.js","AuthService.js","pages/Login.js","pages/SignUp.js","pages/Item.js","pages/Room.js","LoggedInRoute.js","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AuthContext","React","createContext","AuthProvider","children","useState","user","setUser","console","log","useEffect","auth","onAuthStateChanged","Provider","value","Login","history","email","setEmail","password","setPassword","useContext","to","Fragment","onSubmit","e","preventdefault","signInWithEmailAndPassword","then","push","catch","err","htmlFor","type","id","name","placeholder","onChange","target","SignUp","setName","preventDefault","createUserWithEmailAndPassword","updateProfile","displayName","Item","content","Room","messages","setMessages","setValue","firestore","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","message","index","add","time","FieldValue","serverTimestamp","onClick","signOut","LoggedInRoute","Component","component","rest","render","props","App","basename","process","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3cc0ac63.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDEnXnZrt025nhWpiNQP1th8levX9rdQkQ\",\n    authDomain: \"chat-app2-bb19a.firebaseapp.com\",\n    projectId: \"chat-app2-bb19a\",\n    storageBucket: \"chat-app2-bb19a.appspot.com\",\n    messagingSenderId: \"671906755445\",\n    appId: \"1:671906755445:web:e8ce9dfa607d5ee41dd93c\"\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase","import React , {useState, useEffect} from 'react'\nimport firebase from './config/firebase'\n\nconst AuthContext = React.createContext()\n\n\nconst AuthProvider = ({children}) =>{\n    //('')だと更新する度空の文字が入るので、nullになっている。\n    const [user, setUser] = useState(null)\n    console.log(user)\n    //現在ログインしているユーザーを取得。\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(user => {\n            setUser(user)\n        })\n    },[])\n\n    return(\n        <AuthContext.Provider value={user}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport {\n    AuthContext,\n    AuthProvider\n}\n","import React, {useState, useContext} from 'react'\nimport firebase from '../config/firebase'\nimport { AuthContext } from '../AuthService'\nimport { Redirect } from 'react-router-dom'\n\nconst Login = ({history}) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const user = useContext(AuthContext)\n\n    if(user){\n        return<Redirect to='/' />\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventdefault()\n        firebase.auth().signInWithEmailAndPassword(email,password)\n            .then(()=>{\n                history.push('/')\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    \n    return(\n    <React.Fragment>\n        <h1>Login</h1>\n        <form onSubmit={handleSubmit} >\n            <div>\n                <label htmlFor='email'>E-Mail</label>\n                <input \n                    type='email'\n                    id='email'\n                    name='email'\n                    placeholder='Email'\n                    //変わるごとにsetemailの引数に文字が入り、valueが更新される。\n                    onChange={(e)=> setEmail(e.target.value)}\n                    />\n            </div>\n            <div>\n                <label htmlFor='password'>Password</label>\n                <input \n                    type='password'\n                    id='password'\n                    name='password'\n                    placeholder='password'\n                    onChange={(e)=>setPassword(e.target.value)}\n                    />\n            </div>\n            <button type='submit'>Login</button>\n        </form>\n    </React.Fragment>\n    )\n}\n\nexport default Login","import React,{useState} from 'react'\nimport firebase from '../config/firebase'\n\nconst SignUp  = () =>{\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [name, setName] = useState('')\n\n    const handleSubmit = (e) =>{\n        e.preventDefault()\n        firebase.auth().createUserWithEmailAndPassword(email,password)\n            .then(({user}) => {\n                user.updateProfile({\n                    displayName: name\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    return(\n        <div>\n            <h1>SignUp</h1>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor='name'>Name</label>\n                    <input \n                        type='name'\n                        id='name'\n                        name='name'\n                        placeholder='name'\n                        onChange={(e) => setName(e.target.value)}\n                        />\n                </div>\n\n                <div>\n                    <label htmlFor='email'>E-Mail</label>\n                    <input \n                        type='email'\n                        id='email'\n                        name='email'\n                        placeholder='Email'\n                        onChange={(e) => setEmail(e.target.value)}\n                        />\n                </div>\n\n                <div>\n                    <label htmlFor='password'>Password</label>\n                    <input\n                        type='password'\n                        id='password'\n                        name='password'\n                        placeholder='password'\n                        onChange={(e) => setPassword(e.target.value)}\n                        />\n                </div>\n                <button type='submit'>Sign Up</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUp","import React from 'react'\n\nconst Item = ({content, user}) => {\n    return(  \n    <li>{user}:{content}</li>\n    )\n}\n\nexport default Item","import React,{useState, useEffect, useContext} from 'react'\nimport Item from '../pages/Item'\nimport {AuthContext} from '../AuthService'\nimport firebase from '../config/firebase'\n\nconst Room = () => {\n    const [messages, setMessages] = useState([])\n    const [value, setValue] = useState('')\n\n    useEffect(()=>{\n        firebase.firestore().collection('messages')\n          .orderBy('time', 'asc').onSnapshot((snapshot) => {\n                const messages = snapshot.docs.map(doc => {\n                    return (doc.data()\n                    )\n                })\n                setMessages(messages)\n            })\n    }, [])\n\n    const user = useContext(AuthContext)\n\n    const handleSubmit = (e) =>{\n        e.preventDefault()\n        setValue('')\n        firebase.firestore().collection('messages').add({\n            time: firebase.firestore.FieldValue.serverTimestamp(),\n            content: value,\n            user: user.displayName\n        })\n    }\n\n    return(\n        <React.Fragment>\n            <h1>Room</h1>\n            <ul>\n                \n                   {messages.map((message,index)=>{\n                       return(\n                          <Item content={message.content} user={message.user} key={index}/>\n                       )\n                   })}\n                \n            </ul>\n            \n            <form onSubmit={handleSubmit}>\n                <input \n                    type='text'\n                    value={value}\n                    onChange={e => setValue(e.target.value)}\n                    />\n                    <button type='submit'>送信</button>\n            </form>\n            <button onClick={() => firebase.auth().signOut()}>Logout</button>\n        </React.Fragment>\n    )\n}\n\nexport default Room","import React ,{ useContext} from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport {AuthContext} from './AuthService'\n\nconst LoggedInRoute = ({component: Component, ...rest}) =>{\n    //childrenってこと？AuthContextのvalueをとってくる\n    const user = useContext(AuthContext)\n\n\nreturn(\n    <Route\n    {...rest}//pathやexactを分解したものを渡す。\n    render={props =>(\n        user ? (\n            <Component {...props} />\n        ) : (\n            <Redirect to={'/login'} />\n        )\n    )}\n    />\n)\n}\n\nexport default LoggedInRoute","import React from 'react'\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport Room from './pages/Room'\n\nimport {AuthProvider} from './AuthService'\nimport LoggedInRoute from './LoggedInRoute'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n}from 'react-router-dom'\n\n\nconst App = () =>{\n    return(\n        <AuthProvider>\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <LoggedInRoute exact path='/' component={Room} />\n                    <Route exact path='/login' component={Login}　/>\n                    <Route exact path='/signup' component={SignUp} />\n                </Switch>\n            </Router>\n        </AuthProvider>\n \n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}